const jwt = require('jsonwebtoken');

// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —î –∞–¥–º—ñ–Ω–æ–º –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤
module.exports = function (role) {
    return function (req, res, next) {
        if (req.method === "OPTIONS") {
            next();
        }
        try {

            console.log('üîê checkRole running...');

            // –æ—Ç—Ä–∏–º—É—î–º–æ —Ç–æ–∫–µ–Ω —ñ–∑ –∑–∞–≥–æ–ª–æ–≤–∫—ñ–≤
            const token = req.headers.authorization.split(' ')[1];
            if (!token) {
                return res.status(401).json({message: "–°–ø–µ—Ä—à—É —Ç—Ä–µ–±–∞ –∞–≤—Ç–æ—Ä–∏–∑—É–≤–∞—Ç–∏—Å—è"});
            }

            console.log('üîê –†–æ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞:', decoded.role);

            const decoded = jwt.verify(token, process.env.SECRET_KEY);
            if (decoded.role !== role) {
                return res.status(403).json({message: "–î–æ—Å—Ç—É–ø –≤—ñ–¥—Å—É—Ç–Ω—ñ–π"});
            }
            req.user = decoded;
            next();
        } catch (e) {
            res.status(401).json({message: "–°–ø–µ—Ä—à—É —Ç—Ä–µ–±–∞ –∞–≤—Ç–æ—Ä–∏–∑—É–≤–∞—Ç–∏—Å—è"});
        }
    }
}
